// Styling for source code, both Agda-specific and generic

@import "vars.scss";
@import "mixins.scss";


@font-face {
  font-family: 'iosevka';
  font-display: swap;
  font-weight: 400;
  font-stretch: normal;
  font-style: normal;
  src: url('/static/woff2/iosevk-abbie-regular.woff2') format('woff2'), url('/static/ttf/iosevk-abbie-regular.ttf') format('truetype');
}

code, pre, .sourceCode {
  font-family: 'Iosevka', 'Fantasque Sans Mono', Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
  font-weight: 500;
}

div.sourceCode, pre {
  background-color: $code-bg;
  color: $code-fg;
  flex-grow: 0;

  @include material;

  overflow-x: auto;
  line-height: 1.2;

  code {
    display: block;
  }

  > pre {
    padding: unset;
    margin-top: unset;
    margin-bottom: unset;
    box-shadow: unset;

    margin: 0;

    overflow-y: clip;
  }
}

pre.Agda {
  border-radius: 0;
  box-shadow: none;
  overflow-y: clip;

  margin:           0;
  padding:          1em;
  padding-top:      0.25em;
  padding-bottom:   0.25em;

  background-color: $code-bg;
  color:            $code-fg;
}

@keyframes highlight {
  0% {
    background-color: #F5DEB3;
  }
  100% {
    background-color: $code-bg;
  }
}

a[href].hover-highlight {
  background-color: #F5DEB3;
}

/* Aspects. */
.Agda {
  .Comment       { color: $code-fg; font-style: italic; }
  .Background    { background-color: $code-bg; }
  .Markup        { color: $code-fg; }
  .Keyword       { color: $code-orange; }
  .String        { color: $code-red; }
  .Number        { color: $code-pink; }
  .Symbol        { color: $code-fg; }
  .PrimitiveType { color: $code-blue; }
  .Pragma        { color: $code-fg; }

/* NameKinds. */
  .Bound                  { color: $code-fg !important;      }
  .Generalizable          { color: $code-fg !important;      }
  .InductiveConstructor   { color: $code-green !important;   }
  .CoinductiveConstructor { color: $code-green !important;   }
  .Datatype               { color: $code-blue !important;    }
  .Field                  { color: $code-purple !important;  }
  .Function               { color: $code-blue !important;    }
  .Module                 { color: $code-pink !important;    }
  .Postulate              { color: $code-blue !important;    }
  .Primitive              { color: $code-blue !important;    }
  .Record                 { color: $code-blue !important;    }

/* OtherAspects. */
  .UnsolvedMeta         { color: $code-fg; background: yellow         }
  .UnsolvedConstraint   { color: $code-fg; background: yellow         }
  .TerminationProblem   { color: $code-fg; background: #FFA07A        }
  .IncompletePattern    { color: $code-fg; background: #F5DEB3        }
  .Error                { color: red;   text-decoration: underline }
  .TypeChecks           { color: $code-fg; background: #ADD8E6        }
  .ShadowingInTelescope { color: $code-fg; background: #808080        }
  .Deadcode             {
    color: $code-orange;
    font-weight: bold;
  }

  /* Standard attributes. */
  a { text-decoration: none }
  a[href]:hover {
    text-decoration: 2px $link-ul underline;
  }
  a[href]:target {
    animation: highlight 2.5s;
  }

  // background-color: $code-bg;
  font-family: 'iosevka', 'Iosevka', 'Fantasque Sans Mono', 'Roboto Mono', monospace;
  font-weight: 400;

  font-size: initial;
  body.text-page & {
    font-size: var(--code-font-size);
  }
}

// Styles for code
code.kw, span.kw { color: $code-pink; } /* Keyword */
code.dt, span.dt { color: $code-blue; } /* DataType */
code.dv, span.dv { color: $code-orange; } /* DecVal */
code.bn, span.bn { color: $code-orange; } /* BaseN */
code.fl, span.fl { color: $code-orange; } /* Float */
code.ch, span.ch { color: $code-green; } /* Char */
code.st, span.st { color: $code-green; } /* String */
code.co, span.co { color: $code-grey; } /* Comment */
code.ot, span.ot { color: $code-green; } /* Other */
code.al, span.al { color: #ff0000; } /* Alert */
code.fu, span.fu { color: $code-fg; } /* Function */
code.er, span.er { color: #ff0000; } /* Error */
code.wa, span.wa { color: #60a0b0; } /* Warning */
code.cn, span.cn { color: $code-orange; } /* Constant */
code.sc, span.sc { color: $code-yellow; } /* SpecialChar */
code.vs, span.vs { color: $code-blue; } /* VerbatimString */
code.ss, span.ss { color: $code-green; } /* SpecialString */
code.va, span.va { color: $code-fg; } /* Variable */
code.cf, span.cf { color: $code-pink; } /* ControlFlow */
code.op, span.op { color: $code-green; } /* Operator */
code.pp, span.pp { color: $code-orange; } /* Preprocessor */
code.at, span.at { color: $code-green; } /* Attribute */
code.do, span.do { color: $code-red; } /* Documentation */
code.an, span.an { color: $code-red; } /* Annotation */
code.cv, span.cv { color: $code-red; } /* CommentVar */

.typeTooltip {
  position: absolute;
  z-index: 100;

  font-size: 0.8em;
  color: $code-fg;
  background: $code-bg;
}
